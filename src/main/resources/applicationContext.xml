<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--引入db.properties-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>
    <!--DataSource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${DB_URL}"/>
        <property name="driverClassName" value="${DB_DRIVER}"/>
        <property name="username" value="${DB_NAME}"/>
        <property name="password" value="${DB_PASSWORD}"/>
        <property name="initialSize" value="5"/><!-- 在启动连接池初始创建的数据库连接，默认为0 -->
        <property name="maxActive" value="15"/><!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
        <property name="maxIdle" value="10"/><!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
        <property name="minIdle" value="2"/><!-- 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 -->
        <property name="maxWait" value="10000"/> <!--连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待-->
    </bean>

    <!--扫描有注解的包-->
        <context:component-scan base-package="com.szxs.controller,com.szxs.service,com.szxs.mapper"/>

        <!--配置sqlSessionFactoryBean-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!--引用mybatis配置文件-->
                <property name="configLocation" value="classpath:mybatis.xml"/>
                <!--引用数据源组件-->
                <property name="dataSource" ref="dataSource"/>
                <!--配置SQL配置文件-->
                <property name="mapperLocations">
                    <list>
                        <value>classpath:xml/Smbms*.xml</value>
                    </list>
                </property>
        </bean>

        <!--配置mapper-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
               <property name="basePackage" value="com.szxs.mapper"/>
               <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
       </bean>

        <!--定义事物管理器-->
        <bean name="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           <property name="dataSource" ref="dataSource"/>
        </bean>

        <!--通过标签<tx:advice>指定事物管理器设置事物属性-->
        <tx:advice id="txAdvice" transaction-manager="tm">
                <tx:attributes>
                    <!--给add,update,delete开头的方法添加事物-->
                        <tx:method name="add*" propagation="REQUIRED"/>
                        <tx:method name="update*" propagation="REQUIRED"/>
                        <tx:method name="delete*" propagation="REQUIRED"/>
                </tx:attributes>
        </tx:advice>

    <!--定义切入面-->
    <aop:config>
        <!--定义切去点-->
        <aop:pointcut id="pointcut" expression="execution(* com.szxs.service..*.*(..))"/>
        <!--将事物管理与切入点组合-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

    <!--引用拆分spring文件-->
<!--
    <import resource="applicationContext-dao.xml"/>
-->
</beans>
